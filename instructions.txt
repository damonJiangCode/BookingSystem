Terminal 1:

docker-compose build

docker-compose up



Terminal 2:

docker exec -it db /bin/bash

mysql -u root -padmin

SHOW databases;

USE project;

SHOW tables;

CREATE TABLE staff (ID int NOT NULL, LastName VARCHAR(255), FirstName VARCHAR(255), Gender VARCHAR(255), Age int, Occupation VARCHAR(255), PRIMARY KEY (id));

CREATE TABLE customer (ID int NOT NULL, LastName VARCHAR(255), FirstName VARCHAR(255), Gender VARCHAR(255), Age int, SummaryOfConsultation VARCHAR(255), PRIMARY KEY (id));

SHOW tables;

DESCRIBE staff;

DESCRIBE customer;



Webpage:

Register Sstaff

SELECT * FROM staff;

Change Staff

SELECT * FROM staff;

Delete Staff

SELECT * FROM staff;



TEST:
1. open a new terminal;
2. to test staff register:
    1. type npx loadtest -n 1 -c 1 --data '{"ID":123, "LastName":"LastName", "FirstName":"FirstName", "Gender":"gender", "Age": 123, "Occupation": "occupation"}' -T 'application/x-www-form-urlencoded' -m POST http://localhost:8080/staffRegister.html/staffRegister to see the result
    2. npx loadtest -n 10 -c 10 --data '{"ID":123, "LastName":"LastName", "FirstName":"FirstName", "Gender":"gender", "Age": 123, "Occupation": "occupation"}' -T 'application/x-www-form-urlencoded' -m POST http://localhost:8080/staffRegister.html/staffRegister to see the result

3. to test customer register:
    1. type npx loadtest -n 1 -c 1 --data '{"ID":123, "LastName":"LastName", "FirstName":"FirstName", "Gender":"gender", "Age": 123}' -T 'application/x-www-form-urlencoded' -m POST http://localhost:8080/customerRegister.html/customerRegister to see the result
    2. type npx loadtest -n 10 -c 10 --data '{"ID":123, "LastName":"LastName", "FirstName":"FirstName", "Gender":"gender", "Age": 123}' -T 'application/x-www-form-urlencoded' -m POST http://localhost:8080/customerRegister.html/customerRegister to see the result